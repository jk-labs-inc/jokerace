name: nextjs-docker

on: 
  push:
    branches:
      - feat/do-container-registry

permissions:
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Build container image
        run: >
          docker build
          -t ghcr.io/jk-labs-inc/jokerace:do-container-registry registry.digitalocean.com/jokerace:do-container-registry
          --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.PROD_NEXT_PUBLIC_SUPABASE_URL }}
          --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.PROD_NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          --build-arg NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=${{ secrets.PROD_NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID }}
          --build-arg NEXT_PUBLIC_R2_ACCOUNT_ID=${{ secrets.PROD_NEXT_PUBLIC_R2_ACCOUNT_ID }}
          --build-arg NEXT_PUBLIC_R2_ACCESS_KEY_ID=${{ secrets.PROD_NEXT_PUBLIC_R2_ACCESS_KEY_ID }}
          --build-arg NEXT_PUBLIC_R2_SECRET_ACCESS_KEY=${{ secrets.PROD_NEXT_PUBLIC_R2_SECRET_ACCESS_KEY }}
          --build-arg NEXT_PUBLIC_MERKLE_TREES_BUCKET=${{ secrets.PROD_NEXT_PUBLIC_MERKLE_TREES_BUCKET }}
          --build-arg NEXT_PUBLIC_IMAGE_UPLOAD_BUCKET=${{ secrets.PROD_NEXT_PUBLIC_IMAGE_UPLOAD_BUCKET }}
          --build-arg NEXT_PUBLIC_ETHERSCAN_KEY=${{ secrets.PROD_NEXT_PUBLIC_ETHERSCAN_KEY }}
          --build-arg NEXT_PUBLIC_QUICKNODE_SLUG=${{ secrets.PROD_NEXT_PUBLIC_QUICKNODE_SLUG }}
          --build-arg NEXT_PUBLIC_QUICKNODE_KEY=${{ secrets.PROD_NEXT_PUBLIC_QUICKNODE_KEY }}
          --build-arg NEXT_PUBLIC_ALCHEMY_KEY=${{ secrets.PROD_NEXT_PUBLIC_ALCHEMY_KEY }}
          --build-arg NEXT_PUBLIC_PARA_API_KEY=${{ secrets.PROD_NEXT_PUBLIC_PARA_API_KEY }}
          --build-arg NEXT_PUBLIC_PARA_ENVIRONMENT=${{ secrets.PROD_NEXT_PUBLIC_PARA_ENVIRONMENT }}
          --build-arg NEXT_PUBLIC_BREVO_API_KEY=${{ secrets.PROD_NEXT_PUBLIC_BREVO_API_KEY }}
          --build-arg NEXT_PUBLIC_CDP_PROJECT_ID=${{ secrets.PROD_NEXT_PUBLIC_CDP_PROJECT_ID }}
          --build-arg NEXT_PUBLIC_ENVIRONMENT=${{ secrets.PROD_NEXT_PUBLIC_ENVIRONMENT }}
          .

  github-push:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to Github Container Registry
        run: docker push ghcr.io/jk-labs-inc/jokerace:do-container-registry

  do-push:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Digital Ocean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DO_REGISTRY_EMAIL }}
          password: ${{ secrets.DO_REGISTRY_API_TOKEN }}

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/jokerace:do-container-registry
